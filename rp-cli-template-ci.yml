# IoT.bzh Company - redpesk
#
# This file is a generic file containing the script to be played before and after each job.
# This allows one to manage these scripts in a unique file
#
# In order to work correctly, this file needs to be included in the '.gitlab-ci.yml' file
# of the project.
#
# For more information please refer to:
#    - https://docs.gitlab.com/ee/ci/yaml/includes.html#use-default-configuration-from-an-included-configuration-file
#

# Set-up the different variables needed by the pipeline
variables:
    RP_INSTALL_RPCLI_URL: "https://raw.githubusercontent.com/redpesk-devtools/redpesk-sdk-tools/master/install-redpesk-sdk.sh"

default:
  # Define the "before script" to use by default
  before_script:
    # Install rpcli and setup connection
    - command -v rp-cli 2>/dev/null 2>&1 || wget -O - "$RP_INSTALL_RPCLI_URL" | bash -s -- --rp-cli --no-recommends
    - rp-cli connections add "${RP_REMOTE_FACTORY_NAME}" -t "${RP_REMOTE_FACTORY_TOKEN}" -u "${RP_REMOTE_FACTORY_URL}"
    - rp-cli connections use "${RP_REMOTE_FACTORY_NAME}"

# Start build app
.rp-cli-build:
  script:
    - '[ -n "$RP_VERBOSE" ] && { set -x; rpcli connections current; }'
    - |
      # Select the branch
      if [ -n "$CI_COMMIT_BRANCH" ]; then
        SELECTED_BRANCH="$CI_COMMIT_BRANCH"
      elif [ -n "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" ]; then
        SELECTED_BRANCH="$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
      else
        SELECTED_BRANCH="$CI_DEFAULT_BRANCH"
      fi
      echo "Selected branch is: $SELECTED_BRANCH"

      # Use RP_REMOTE_FACTORY_APP if set, else fallback to GitLab repo name
      if [ -n "$RP_REMOTE_FACTORY_APP" ]; then
        APP_NAME="$RP_REMOTE_FACTORY_APP"
      else
        APP_NAME="$CI_PROJECT_NAME"
      fi
      echo "Using application name: $APP_NAME"
    - rp-cli applications update "$APP_NAME" --project "${RP_REMOTE_FACTORY_PROJECT}" --source-rev "$SELECTED_BRANCH"
    - rp-cli applications build "$APP_NAME" --project "${RP_REMOTE_FACTORY_PROJECT}"

# Start test app
.rp-cli-start-test:
  script:
    - '[ -n "$RP_VERBOSE" ] && { set -x; rpcli connections current; }'
    - |
      if [ -n "$RP_REMOTE_FACTORY_APP" ]; then
        APP_NAME="$RP_REMOTE_FACTORY_APP"
      else
        APP_NAME="$CI_PROJECT_NAME"
      fi
      echo "Using application name: $APP_NAME"

    - rp-cli applications test "$APP_NAME" --project "${RP_REMOTE_FACTORY_PROJECT}"
    - mkdir -p redtest-logs
    - rp-cli applications tests logs "$APP_NAME" --project "${RP_REMOTE_FACTORY_PROJECT}" --force-app --directory redtest-logs
    - cat redtest-logs/*/*/console.log
  artifacts:
    paths:
      - redtest-logs/**
    reports:
      coverage_report:
        coverage_format: cobertura
        path: redtest-logs/**/coverage.xml
  coverage: '/Total:\|(\d+\.?\d+\%)/'

